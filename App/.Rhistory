2*(pnorm(4.609,lower.tail = FALSE))
5e-08
-log(5e-08)
load("C:/Users/ivanv/Desktop/Lorenz_GP_DataPrep.RData")
library(devtools)
install.packages("devtools",dependencies = TRUE)
a <- c(1:10)
b < c(2:11)
b <- c(2:11)
a+b
sum(a*b)
a*b
a
b
mapply(function(x, y) seq_len(x) + y,
c(a =  1, b = 2, c = 3),  # names from first
c(A = 10, B = 0, C = -10))
?seq_len
seq_len(1)
seq_len(2)
seq_len(3)
a <- c(1:10)
b <- c(2:11)
dot <- function(a,b) sum(a*b)
mapply(dot,a,b)
a <- c(1:10)
b <- c(2:11)
dot <- function(a,b) (a*b)
sum(mapply(dot,a,b))
?subset
?mapply(function, ...)
?mapply
?mapply
?backsolve
r <- rbind(c(1,2,3),
c(0,1,1),
c(0,0,2))
( y <- backsolve(r, x <- c(8,4,2)) ) # -1 3 1
r %*% y # == x = (8,4,2)
backsolve(r, x, transpose = TRUE)
r
a_List <- list(a[1:5],a[6:10])
b_List <- list(b[2:6],b[7:11])
sum(mapply(dot,a,b))
(mapply(dot,a,b))
(mapply(dot,a_List,b_List))
a <- c(1:10)
b <- c(2:11)
dot <- function(a,b) sum(a*b)
sum(mapply(dot,a,b))
a_List <- list(a[1:5],a[6:10])
b_List <- list(b[2:6],b[7:11])
mapply(dot,a_List,b_List)
a_List
b_List
a_List <- list(a[1:5],a[6:10])
b_List <- list(b[1:5],b[6:10])
mapply(dot,a_List,b_List)
?subset
library(rrBLUP)
?A.mat
?kin.blup
?mixed.solve
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
q()
library(rJava)
library(installr)
if(!require(installr)) {
install.packages("installr");
require(installr)
} #l
updateR()
q()
library(rlang)
library(rJava)
if (!require("devtools")) install.packages("devtools")
devtools::install_bitbucket(
repo = "bucklerlab/rtassel",
ref = "master",
build_vignettes = FALSE
)
Sys.setenv(JAVA_HOME='C:/Program Files/Java/jre1.8.0_321/')
if (!require("devtools")) install.packages("devtools")
devtools::install_bitbucket(
repo = "bucklerlab/rtassel",
ref = "master",
build_vignettes = FALSE
)
remove.packages("rJava")
install.packages("rJava")
install.packages("rJava")
if (!require("devtools")) install.packages("devtools")
devtools::install_bitbucket(
repo = "bucklerlab/rtassel",
ref = "master",
build_vignettes = FALSE
)
q()
library(rTASSEL)
?filterGenotypeTableTaxa
?imputeLDKNNi
?imputeNumeric
2533+1867
4400+2457
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2/App')
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/PBCGSWorkshop')
library(SoyNAM)
library(NAM)
data(soynam)
geno <- markov(gen.raw)
##   Missing Information
generateNA <- function(MarkerInformation,fraction){
nLines <- length(MarkerInformation)
nLines_NA <- fraction*nLines
NA_Indices <- sample(c(1:nLines),nLines_NA)
MarkerInformation[NA_Indices] <- NA
return(MarkerInformation)
}
#Easy impute, replacing missing with marker mean
replaceNAwithMean <- function(mat){
replaceNAwithMeanVec <- function(vec){
mu <- mean(vec, na.rm=TRUE)
vec[is.na(vec)] <- mu
return(vec)
}
return(apply(mat, 2, replaceNAwithMeanVec))
}
nreps <- 10
geno_sub_list <- list()
for(nrep in 1:nreps) {
set.seed(125+nrep)
indices <- sample(c(1:nrow(geno)),1000)
geno_sub <- geno[indices,]
geno_sub_list[[nrep]] <- geno_sub
}
ImputationAccuracy_NAM_Naive_List <- list()
ImputationAccuracy_NAM_Markov_List <- list()
Fractions <- list(0.2,0.4,0.6,0.8)
NA_Mat_List_Fr <- list()
for(nFrn in 1:length(Fractions)){
NA_Mat_List_Fr[[nFrn]] <- lapply(geno_sub_list,function(y) apply(y,2,function(x) generateNA(x,Fractions[[nFrn]])))
}
length(NA_Mat_List_Fr)
lapply(NA_Mat_List_Fr,length)
g_Mat_QC_List_Naive_Frn <- lapply(NA_Mat_List_Fr,function(y) lapply(y,function(x) replaceNAwithMean(x)))
g_Mat_QC_List_Markov_Frn <- lapply(NA_Mat_List_Fr,function(y) lapply(y,function(x) markov(x)))
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
q()
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp()
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp()
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
library(brapi)
library(brapiui)
library(magrittr)
white_list <- ba_db()
white_list
con <- brapi::ba_db()$bms_test
con
loc <- brapi::ba_locations(con, pageSize = 100)
loc <- brapi::ba_locations(con, pageSize = 10)
loc
?brapi::ba_login
con <- ba_db()$testserver
con
con$Address
con
con[["port"]]
con[[]]
con[["secure"]]
brapi::ba_db()$sweetpotatobase
brapi::ba_db()$sweetpotatobase
?ba_db()
as.ba_db("https://soybeanbase.breedinginsight.net/")
"https://soybeanbase.breedinginsight.net/"
?as.ba_db
con <- as.ba_db(
crop = "soybean",
db="https://soybeanbase.breedinginsight.net/"
)
con
loc <- brapi::ba_locations(con, pageSize = 100)
con <- as.ba_db(
crop = "soybean",
db="soybeanbase.breedinginsight.net"
)
loc <- brapi::ba_locations(con, pageSize = 100)
con <- as.ba_db(
crop = "soybean",
db="soybeanbase.breedinginsight.net"
)
con
loc <- brapi::ba_locations(con, pageSize = 100)
loc <- brapi::ba_locations(con, pageSize = 10)
brapi::ba_locations(con, pageSize = 10)
set_qbms_config("https://soybeanbase.breedinginsight.net/",
time_out = 300, engine = "breedbase", no_auth = TRUE)
# login using your BMS account (interactive mode)
# or pass your BMS username and password as parameters (batch mode)
login_bms()
# load the QBMS library
library(QBMS)
# config your BMS connection
#set_qbms_config("bms.example.com", 443, "https://")
set_qbms_config("https://soybeanbase.breedinginsight.net/",
time_out = 300, engine = "breedbase", no_auth = TRUE)
# login using your BMS account (interactive mode)
# or pass your BMS username and password as parameters (batch mode)
login_bms()
# list supported crops in the bms server
list_crops()
login_bms()
# list supported crops in the bms server
list_crops()
login_bms()
login_bms()
list_crops()
set_crop("Tutorial1")
set_qbms_config("https://soybeanbase.breedinginsight.net/",
time_out = 3000, engine = "breedbase", no_auth = FALSE)
# login using your BMS account (interactive mode)
# or pass your BMS username and password as parameters (batch mode)
login_bms()
list_crops()
set_qbms_config("soybeanbase.breedinginsight.net",
time_out = 3000, engine = "breedbase", no_auth = FALSE)
# login using your BMS account (interactive mode)
time_out = 3000, engine = "breedbase", no_auth = FALSE)
set_qbms_config("soybeanbase.breedinginsight.net",time_out = 3000, engine = "breedbase", no_auth = FALSE)
# or pass your BMS username and password as parameters (batch mode)
login_bms()
list_crops()
list_crops()
set_qbms_config("soybeanbase.breedinginsight.net",time_out = 3000, engine = "breedbase", no_auth = FALSE)
# login using your BMS account (interactive mode)
# or pass your BMS username and password as parameters (batch mode)
login_bms()
?set_qbms_config
set_qbms_config("https://soybeanbase.breedinginsight.net/",
time_out = 3000, engine = "breedbase", no_auth = FALSE)
# login using your BMS account (interactive mode)
# or pass your BMS username and password as parameters (batch mode)
login_bms()
set_qbms_config("https://breedbase.org/",time_out = 3000, engine = "breedbase", no_auth = FALSE)
login_bms()
list_crops()
login_bms()
list_crops()
?login_bms()
if(!is.null(fixedX) & fixedX != "NULL" & fixedData !="NULL"){
GPModel <- "rrBLUP (rrBLUP)"
Fixed.X <- fixedData[[1]]
Test.X <- fixedData[[2]]
}
TrainData_Table_Num_Filt <- Data_Table_Num_Filt_List[[1]]
TestData_Table_Num_Filt <- Data_Table_Num_Filt_List[[2]]
TestGenoTable <- apply(TestData_Table_Num_Filt[,-1],2,as.numeric)
initCol <- grep("ss",colnames(TrainData_Table_Num_Filt))[1]
finalCol <- grep("ss",colnames(TrainData_Table_Num_Filt))[length(grep("ss",colnames(TrainData_Table_Num_Filt)))]
if(is.null(optTS)){
trainPheno0 <- as.numeric(as.character(TrainData_Table_Num_Filt[,trait]))
geno_012 <- apply(TrainData_Table_Num_Filt[,c(initCol:finalCol)],2,as.numeric)
trainGeno <- apply(geno_012,2,function(x) x-1)
Geno <- as.character(TrainData_Table_Num_Filt[,1])
rownames(trainGeno) <- Geno
}
if(!is.null(optTS)){
strainID <- as.character(TrainData_Table_Num_Filt[,1])
trainSetID <- as.character(as.vector(optTS))
trainIndices <- which(strainID %in% trainSetID)
trainPheno0 <- as.numeric(as.character(TrainData_Table_Num_Filt[trainIndices,trait]))
geno_012 <- apply(TrainData_Table_Num_Filt[trainIndices,c(initCol:finalCol)],2,as.numeric)
trainGeno <- apply(geno_012,2,function(x) x-1)
Geno <- as.character(TrainData_Table_Num_Filt[trainIndices,1])
rownames(trainGeno) <- Geno
}
### Check if the markers are missing in > 99% of the lines
allNAMarkers <- apply(trainGeno,2,function(x) if(length(which(is.na(x)))==nrow(trainGeno)){1}else{0})
allNAMarkerIndices <- which(allNAMarkers!=0)
if(length(allNAMarkerIndices)>=1){
trainGeno0 <- trainGeno[,-allNAMarkerIndices]
}else{ trainGeno0 <- trainGeno}
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
?colSums
print(dim(trainGeno_Imp2))
dim(UCBAdmissions)
rowSums(UCBAdmissions); rowSums(UCBAdmissions, dims = 2)
colSums(UCBAdmissions); colSums(UCBAdmissions, dims = 2)
str(UCBAdmissions)
UCBAdmissions[1:5,]
UCBAdmissions
dim(UCBAdmissions)
rowSums(UCBAdmissions); rowSums(UCBAdmissions, dims = 2)
colSums(UCBAdmissions); colSums(UCBAdmissions, dims = 2)
rowSums(UCBAdmissions)
rowSums(UCBAdmissions,dims=2)
matrix(rep(c(TRUE,FALSE),10),nrow=10,ncol=2)
mLogical <- matrix(rep(c(TRUE,FALSE),10),nrow=10,ncol=2)
colsums(mLogical)
colSums(mLogical)
mLogical <- matrix(rep(c(TRUE,FALSE),10),nrow=5,ncol=4)
colSums(mLogical)
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
library(devtools)
devtools::install_github(‘allogamous/EnvRtype’)
devtools::install_github("allogamous/EnvRtype")
library(EnvRtype)
library(EnvRtype)
data(‘maizeYield’) # phenotype data
data(‘maizeG’) # GRM
data(‘maizeWTH’) # weather data
data("maizeYield")
data("maizeYield") # phenotype data
data("maizeG") # GRM
data("maizeWTH") # weather data
##get_weather fn example
env.data <- get_weather(env.id = ‘NAIROBI’,lat = -1.367,
lon = 36.834, start.day = ‘2015-03-01’,
end.day = ‘2015-04-01’, country = ‘KEN’)
##get_weather fn example
env.data <- get_weather(env.id = "NAIROBI",lat = -1.367,
lon = 36.834, start.day = "015-03-01",
end.day = "2015-04-01", country = "KEN")
\
env.data <- get_weather(env.id = "NAIROBI",lat = -1.367,
lon = 36.834, start.day = "2015-03-01",
end.day = "2015-04-01", country = "KEN")
library(rlang)
unloadNamespace("rlang")
q()
remove.packages("rlang")
library(rlang)
install.packages("rlang")
library(rlang)
install.packages("rlang")
library(rlang)
library(EnvRtype)
data("maizeYield") # phenotype data
data("maizeG") # GRM
data("maizeWTH") # weather data
##get_weather fn example
env.data <- get_weather(env.id = "NAIROBI",lat = -1.367,
lon = 36.834, start.day = "2015-03-01",
end.day = "2015-04-01", country = "KEN")
env.data
str(env.data)
shiny::runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
runApp('C:/Users/ivanv/Desktop/UMN_GIT/GPSoy/SoyGen2App/App')
