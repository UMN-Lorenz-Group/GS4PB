% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ME_Functions.R
\name{getK}
\alias{getK}
\title{Compute Kernel Matrices for Genomic Models}
\usage{
getK(
  Y,
  X,
  kernel = c("GK", "GB"),
  setKernel = NULL,
  bandwidth = 1,
  model = c("SM", "MM", "MDs", "MDe"),
  quantil = 0.5,
  intercept.random = FALSE
)
}
\arguments{
\item{Y}{A data frame containing the phenotypic data. The first two columns 
should represent the environment and genotype identifiers.}

\item{X}{A numeric matrix of marker data, with genotypes as rows and markers 
as columns.}

\item{kernel}{A character string specifying the kernel type. Options are 
`"GK"` (Gaussian kernel) or `"GB"` (Genomic relationship matrix). Default 
is `"GK"`.}

\item{setKernel}{A list of precomputed kernel matrices. If provided, this 
overrides the `kernel` parameter. Default is `NULL`.}

\item{bandwidth}{A numeric vector specifying the bandwidth(s) for the 
Gaussian kernel. Default is `1`.}

\item{model}{A character string specifying the model type. Options are:
- `"SM"`: Single model
- `"MM"`: Multiple model
- `"MDs"`: Model with genotype-by-environment interaction (shared)
- `"MDe"`: Model with genotype-by-environment interaction (exclusive)
Default is `"SM"`.}

\item{quantil}{A numeric value representing the quantile used for scaling in 
the Gaussian kernel. Default is `0.5`.}

\item{intercept.random}{A logical value indicating whether to include a 
random intercept in the model. Default is `FALSE`.}
}
\value{
A list of kernel matrices. Each element of the list contains:
  - `Kernel`: The kernel matrix.
  - `Type`: A character string indicating the type of kernel, either `"D"` 
    (diagonal) or `"BD"` (block-diagonal for interaction models).
}
\description{
The `getK` function computes kernel matrices for genomic models, supporting
different types of kernels and models. It is designed for applications in
genomic selection and prediction.
}
\details{
- For the `"GK"` kernel, the function calculates a Gaussian kernel matrix 
  based on pairwise distances between genotypes.
- For the `"GB"` kernel, it computes a genomic relationship matrix using 
  the marker data.
- The `setKernel` parameter allows the user to provide custom kernel matrices 
  for advanced use cases.
}
\examples{
\dontrun{
# Example phenotypic data
Y <- data.frame(
  Environment = rep(c("Env1", "Env2"), each = 5),
  Genotype = factor(rep(letters[1:5], 2)),
  Value = rnorm(10)
)

# Example marker data
X <- matrix(runif(100), nrow = 5)
rownames(X) <- letters[1:5]

# Compute Gaussian kernels
kernels <- getK(Y = Y, X = X, kernel = "GK", model = "SM")

# Compute kernels with genotype-by-environment interaction
kernels_interaction <- getK(Y = Y, X = X, kernel = "GK", model = "MDs")
}

}
