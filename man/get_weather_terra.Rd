% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Enviromics_Functions.R
\name{get_weather_terra}
\alias{get_weather_terra}
\title{Download and Process Weather Data from NASA POWER API}
\usage{
get_weather_terra(
  env.id = NULL,
  lat = NULL,
  lon = NULL,
  start.day = NULL,
  end.day = NULL,
  variables.names = NULL,
  dir.path = NULL,
  save = FALSE,
  temporal.scale = "daily",
  country = NULL,
  parallel = TRUE,
  workers = NULL,
  chunk_size = 29,
  sleep = 60
)
}
\arguments{
\item{env.id}{A vector of environment IDs (e.g., "env1"). If `NULL`, they will be generated automatically.}

\item{lat}{A vector of latitudes for the locations.}

\item{lon}{A vector of longitudes for the locations.}

\item{start.day}{A vector of start dates for data retrieval in "YYYY-MM-DD" format. If `NULL`, defaults to 1000 days prior to the current date.}

\item{end.day}{A vector of end dates for data retrieval in "YYYY-MM-DD" format. If `NULL`, defaults to 30 days after `start.day`.}

\item{variables.names}{A character vector of variable names to retrieve (e.g., "T2M", "PRECTOTCORR"). Defaults to common meteorological variables.}

\item{dir.path}{The directory path for saving output files. Defaults to the current working directory.}

\item{save}{Logical. If `TRUE`, saves the retrieved data to files in the specified directory.}

\item{temporal.scale}{The temporal resolution of the data. Defaults to `"daily"`.}

\item{country}{A vector of country codes (e.g., "USA", "BRA") for retrieving elevation data. If `NULL`, elevation data is not included.}

\item{parallel}{Logical. If `TRUE`, enables parallel processing for faster data retrieval.}

\item{workers}{Number of workers/cores to use for parallel processing. Defaults to 90% of available cores.}

\item{chunk_size}{Number of locations to process in each parallel chunk. Defaults to 29.}

\item{sleep}{Time in seconds to wait between API requests. Defaults to 60.}
}
\value{
A data frame containing the retrieved weather data, including elevation if `country` is specified.
}
\description{
This function retrieves weather data from the NASA POWER API based on input geographical coordinates 
and date ranges. It supports parallel processing to handle large datasets efficiently and includes 
functionality to integrate elevation data from geospatial sources.
}
\details{
This function interacts with the NASA POWER API to retrieve weather data, such as temperature, precipitation, and wind speed, for specific locations and time periods. It optionally integrates elevation data from geospatial sources. Parallel processing is supported to improve performance when handling large datasets.
}
\examples{
\dontrun{
# Retrieve daily weather data for two locations
weather_data <- get_weather_terra(
  env.id = c("env1", "env2"),
  lat = c(40.7128, 34.0522),
  lon = c(-74.0060, -118.2437),
  start.day = c("2023-01-01", "2023-01-01"),
  end.day = c("2023-01-31", "2023-01-31")
)
}

}
